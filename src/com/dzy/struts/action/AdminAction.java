/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dzy.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.dzy.domain.Admin;
import com.dzy.domain.App;
import com.dzy.domain.Appcomment;
import com.dzy.domain.Users;
import com.dzy.service.interfac.AdminServiceInterface;
import com.dzy.struts.form.AdminForm;
import com.dzy.util.MyMD5;


public class AdminAction extends DispatchAction {
	
	AdminServiceInterface adminService;
	
	public void setAdminService(AdminServiceInterface adminService) {
		this.adminService = adminService;
	}
	public ActionForward gotoadminlogin(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("gotoadminlogin");
	}
	public ActionForward showmain(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("adminloginok");
	}
	
	public ActionForward showalluser(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminForm adminform=(AdminForm) form;
	//	System.out.println("终于到这里来了");
		String username=adminform.getUsername();
		String pwd=adminform.getPwd();
	//	System.out.println("yonghuming  "+username+"   mima"+pwd);
		Admin admin=new Admin();
		admin.setUsername(username);
		admin.setPwd(MyMD5.MD5(pwd));
		
		admin=adminService.checkAdmin(admin);
		if(admin==null)
		{
			return mapping.findForward("gotoadminlogin");
		}
		request.getSession().setAttribute("admininfo",admin);
		return mapping.findForward("adminloginok");
	}
	
	public ActionForward shownextuser(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		//下面开始准备数据了
		String pageNow="1";
		if(request.getParameter("pageNow")!=null)
		{
			pageNow=request.getParameter("pageNow");
		}
		List<Users> userlist=adminService.admin_getAllUser(Integer.parseInt(pageNow));
		int pageCount=adminService.admin_getAllUsersCount();
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("userlist", userlist);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("gotonextuser");
	}
	public ActionForward shownextapp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		//下面开始准备数据了
		String pageNow="1";
		if(request.getParameter("pageNow")!=null)
		{
			pageNow=request.getParameter("pageNow");
		}
		List<App> applist=adminService.admin_getAllApp(Integer.parseInt(pageNow));
		int pageCount=adminService.admin_getAllUsersCount();
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("applist", applist);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("gotonextapp");
	}
	public ActionForward shownextcomment(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		//下面开始准备数据了
		String pageNow="1";
		if(request.getParameter("pageNow")!=null)
		{
			pageNow=request.getParameter("pageNow");
		}
		List<Appcomment> appcommentlist=adminService.admin_getAllComment(Integer.parseInt(pageNow));
		int pageCount=adminService.admin_getAllUsersCount();
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("appcommentlist", appcommentlist);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("gotonextcomment");
	}
	
	public ActionForward delsomedody(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String type=request.getParameter("type");
		String id=request.getParameter("id");
		if(type.equals("user"))
		{
			String hql="delete Users where id=?";
			Integer a=(Integer) adminService.PartupdateByHql(hql, new Object[]{Integer.parseInt(id)});
		//	System.out.println("看下你返回的"+a);
			if(a>0)
			{
			    PrintWriter out = null;   
		        try
		        {
		            // 设置回发内容编码，防止弹出的信息出现乱码
		            response.setContentType("text/html;charset=UTF-8");
		            response.setCharacterEncoding("UTF-8");
		            out = response.getWriter();
		            String alertString = "删除成功哦";
		            String redirectURL = request.getContextPath() + "/admin.do?flag=shownextuser" ;  
		            out.print("<script>alert('" + alertString + "')</script>");
		            out.print("<script>window.location.href='" + redirectURL + "'</script>");
		            out.flush();
		            out.close();
		        }
		        catch (IOException e)
		        {
		            e.printStackTrace();
		        }
		                  
			}
		}else if(type.equals("comment"))
		{
			String hql="delete Appcomment where id=?";
			Integer a=(Integer) adminService.PartupdateByHql(hql, new Object[]{Integer.parseInt(id)});
		//	System.out.println("看下你返回的"+a);
			if(a>0)
			{ PrintWriter out = null;   
	        try
	        {
	            // 设置回发内容编码，防止弹出的信息出现乱码
	            response.setContentType("text/html;charset=UTF-8");
	            response.setCharacterEncoding("UTF-8");
	            out = response.getWriter();
	            String alertString = "删除成功哦";
	            String redirectURL = request.getContextPath() + "/admin.do?flag=shownextcomment" ;  
	            out.print("<script>alert('" + alertString + "')</script>");
	            out.print("<script>window.location.href='" + redirectURL + "'</script>");
	            out.flush();
	            out.close();
	        }
	        catch (IOException e)
	        {
	            e.printStackTrace();
	        }
			}
		}else if(type.equals("app")){
			
			String hql="delete Users where id=?";
			Integer a=(Integer) adminService.PartupdateByHql(hql, new Object[]{Integer.parseInt(id)});
		//	System.out.println("看下你返回的"+a);
			if(a>0)
			{ 
				PrintWriter out = null;   
	        try
	        {
	            // 设置回发内容编码，防止弹出的信息出现乱码
	            response.setContentType("text/html;charset=UTF-8");
	            response.setCharacterEncoding("UTF-8");
	            out = response.getWriter();
	            String alertString = "删除成功哦";
	            String redirectURL = request.getContextPath() + "/admin.do?flag=shownextapp" ;  
	            out.print("<script>alert('" + alertString + "')</script>");
	            out.print("<script>window.location.href='" + redirectURL + "'</script>");
	            out.flush();
	            out.close();
	        }
	        catch (IOException e)
	        {
	            e.printStackTrace();
	        }
			}
		}

		return mapping.findForward(null);
	}
	
	
}