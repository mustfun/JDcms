/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dzy.struts.action;

import java.awt.geom.CubicCurve2D;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.omg.CORBA.Request;

import com.dzy.domain.App;
import com.dzy.service.interfac.AppServiceInterface;


public class ApptypeAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method
	 * 响应用户点击过来的请求，主要是标签页
	 * 看下用户点击哪个标签
	 */
	AppServiceInterface appService;
	
	
	public void setAppService(AppServiceInterface appService) {
		this.appService = appService;
	}


	public ActionForward gototype(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String id=request.getParameter("id");
		//System.out.println("id是"+id);
		Integer pageNow=1;
		if(request.getParameter("pageNow")==null)
		{
			pageNow=1;
		}else{
			pageNow=Integer.parseInt(request.getParameter("pageNow"));
		}
		List<App> list=appService.getAllSameTypeApp(pageNow,Integer.parseInt(id));
		request.setAttribute("type_app_info", list);
		request.setAttribute("temptype", id);
		request.setAttribute("pageNow", pageNow);
		//还要存一个pageCount啊，麻烦
		int pageCount=appService.getAllSameTypeAppCount(Integer.parseInt(id));
		request.setAttribute("pageCount", (pageCount/4)+1);
		return mapping.findForward("gototypeok");
	}
	
	public ActionForward showlatestapp(ActionMapping mapping,ActionForm form,HttpServletRequest request, HttpServletResponse response)
	{
		int current_page=1;
		if(request.getParameter("pageNow")!=null)
		{
			current_page=Integer.parseInt(request.getParameter("pageNow"));
		}
		String hql="from App order by id desc";
		List<App> list=appService.executeByPage(current_page, 4, null, hql);
		int pageCount =appService.getAllappCount();
		request.setAttribute("pageNow", current_page);
		request.setAttribute("listpage", list);
		request.setAttribute("pageCount", (pageCount/4)+1);
		return mapping.findForward("gotolatestok");
	}
	
	public ActionForward recomandapp(ActionMapping mapping,ActionForm form,HttpServletRequest request, HttpServletResponse response)
	{
		int pageNow=1;
		if(request.getParameter("pageNow")!=null)
		{
			pageNow=Integer.parseInt(request.getParameter("pageNow"));
		}
		String hql="from App";
		List<App> list=appService.executeByPage(pageNow, 4, null, hql);
		int pageCount=appService.getAllappCount();
		request.setAttribute("applist", list);
		request.setAttribute("pageCount", (pageCount/4)+1);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("gotorecommend");
	}
	
	public ActionForward mostdownload(ActionMapping mapping,ActionForm form,HttpServletRequest request,HttpServletResponse response)
	{
		int pageNow=1;
		if(request.getParameter("pageNow")!=null)
		{
			pageNow=Integer.parseInt(request.getParameter("pageNow"));
		}
		String hql="from App order by appDownnum desc";
		List<App> list=appService.executeByPage(pageNow, 4, null, hql);
		int pageCount=appService.getAllappCount();
		request.setAttribute("mostdownapplist", list);
		request.setAttribute("pageCount", (pageCount/4)+1);
		request.setAttribute("pageNow", pageNow); 
		return mapping.findForward("gotomostdown");
	}
	
}